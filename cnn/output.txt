ðŸš€ Using device: cuda
âœ… Model Initialized. Starting Training...
Epoch 1 => Train Acc: 18.48%, Loss: 2.2860
Valid Acc: 21.93%
Test Acc: 21.90%
Epoch 2 => Train Acc: 21.53%, Loss: 2.2259
Valid Acc: 20.94%
Test Acc: 21.01%
Epoch 3 => Train Acc: 21.21%, Loss: 2.1191
Valid Acc: 22.23%
Test Acc: 22.10%
Epoch 4 => Train Acc: 23.94%, Loss: 2.0199
Valid Acc: 25.33%
Test Acc: 24.86%
Epoch 5 => Train Acc: 26.32%, Loss: 1.9595
Valid Acc: 27.88%
Test Acc: 27.84%
Epoch 6 => Train Acc: 29.75%, Loss: 1.9016
Valid Acc: 30.41%
Test Acc: 31.08%
Epoch 7 => Train Acc: 31.91%, Loss: 1.8468
Valid Acc: 33.33%
Test Acc: 33.47%
Epoch 8 => Train Acc: 34.05%, Loss: 1.7902
Valid Acc: 35.23%
Test Acc: 35.38%
Epoch 9 => Train Acc: 36.34%, Loss: 1.7379
Valid Acc: 37.02%
Test Acc: 37.53%
Epoch 10 => Train Acc: 36.77%, Loss: 1.7169
Valid Acc: 38.57%
Test Acc: 38.45%

ðŸ”¥ Final Architecture: Genotype(normal=[
('<chosen_op>', 1),
('<chosen_op>', 0),
('<chosen_op>', 0),
('<chosen_op>', 2),
('<chosen_op>', 1),
('<chosen_op>', 0),
('<chosen_op>', 3),
('<chosen_op>', 4),
('<chosen_op>', 1),
('<chosen_op>', 0),
('<chosen_op>', 2),
('<chosen_op>', 1),
('<chosen_op>', 2),
('<chosen_op>', 0),
('<chosen_op>', 0),
('<chosen_op>', 1),
('<chosen_op>', 1),
('<chosen_op>', 0),
('<chosen_op>', 2),
('<chosen_op>', 0),
('<chosen_op>', 1),
('<chosen_op>', 0),
('<chosen_op>', 4),
('<chosen_op>', 2)],
normal_concat=[2, 3, 4, 5],
reduce=[('<chosen_op>', 0),
('<chosen_op>', 1),
('<chosen_op>', 0),
('<chosen_op>', 1),
('<chosen_op>', 1),
('<chosen_op>', 0),
('<chosen_op>', 1),
('<chosen_op>', 2)],
reduce_concat=[2, 3, 4, 5])
âœ… Training Complete!

















































 Final Architecture:
 Genotype(normal=
 [
	(tensor(1, device='cuda:0'), 1),
	(tensor(0, device='cuda:0'), 0),
	(tensor(1, device='cuda:0'), 1),
	(tensor(0, device='cuda:0'), 0),
	(tensor(0, device='cuda:0'), 0),
	(tensor(2, device='cuda:0'), 2),
	(tensor(3, device='cuda:0'), 3),
	(tensor(2, device='cuda:0'), 2),
	(tensor(0, device='cuda:0'), 0),
	(tensor(1, device='cuda:0'), 1),
	(tensor(1, device='cuda:0'), 1),
	(tensor(0, device='cuda:0'), 0),
	(tensor(1, device='cuda:0'), 1),
	(tensor(3, device='cuda:0'), 3),
	(tensor(2, device='cuda:0'), 2),
	(tensor(0, device='cuda:0'), 0),
	(tensor(1, device='cuda:0'), 1),
	(tensor(0, device='cuda:0'), 0),
	(tensor(2, device='cuda:0'), 2),
	(tensor(1, device='cuda:0'), 1),
	(tensor(1, device='cuda:0'), 1),
	(tensor(2, device='cuda:0'), 2),
	(tensor(0, device='cuda:0'), 0),
	(tensor(1, device='cuda:0'), 1)
	],
	normal_concat=[2, 3, 4, 5],
	reduce=
	[
		(tensor(0, device='cuda:0'), 0),
		(tensor(1, device='cuda:0'), 1),
		(tensor(2, device='cuda:0'), 2),
		(tensor(0, device='cuda:0'), 0),
		(tensor(0, device='cuda:0'), 0),
		(tensor(1, device='cuda:0'), 1),
		(tensor(0, device='cuda:0'), 0),
		(tensor(3, device='cuda:0'), 3)
	],
	reduce_concat=[2, 3, 4, 5])
âœ… Training Complete!


without given genotype

ðŸ”¥ Final Architecture: Genotype(
normal=[
	'conv_3x3',
	'conv_1x1',
	'sep_conv_3x3',
	'conv_1x1',
	'conv_3x3',
	'dil_conv_3x3',
	'conv_3x3',
	'max_pool_3x3',
	'conv_3x3',
	'conv_1x1',
	'conv_3x3',
	'conv_1x1',
	'conv_3x3',
	'sep_conv_3x3',
	'conv_3x3',
	'conv_1x1',
	'conv_1x1',
	'conv_3x3',
	'sep_conv_3x3',
	'conv_3x3',
	'sep_conv_3x3',
	'conv_1x1',
	'conv_1x1',
	'sep_conv_3x3'
],
normal_concat=[2, 3, 4, 5],

reduce=
[
	'conv_3x3',
	'conv_1x1',
	'conv_1x1',
	'conv_3x3',
	'sep_conv_3x3',
	'dil_conv_3x3',
	'sep_conv_3x3',
	'dil_conv_3x3'
],
reduce_concat=[2, 3, 4, 5])
âœ… Training Complete!

with NASNet
 Final Architecture:
 Genotype(
 normal=
 [
	'conv_3x3',
	'conv_1x1',
	'conv_3x3',
	'sep_conv_3x3',
	'sep_conv_3x3',
	'dil_conv_3x3',
	'sep_conv_3x3',
	'conv_3x3',
	'conv_3x3',
	'conv_1x1',
	'conv_1x1',
	'conv_3x3',
	'conv_3x3',
	'dil_conv_3x3',
	'sep_conv_3x3',
	'dil_conv_3x3',
	'conv_3x3',
	'conv_1x1',
	'sep_conv_3x3',
	'conv_1x1',
	'conv_3x3',
	'sep_conv_3x3',
	'conv_3x3',
	'sep_conv_3x3'
	],
normal_concat=[2, 3, 4, 5],

reduce=
[
	'conv_3x3',
	'conv_1x1',
	'sep_conv_3x3',
	'conv_3x3',
	'dil_conv_3x3',
	'conv_3x3',
	'conv_1x1',
	'max_pool_3x3'
],
reduce_concat=[2, 3, 4, 5])
âœ… Training Complete!
